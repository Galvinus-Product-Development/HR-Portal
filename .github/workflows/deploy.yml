name: Deploy to Amazon ECR

on:
  push:
    paths:
      - "Backend-AS/**"
      - "Backend-ED/**"
      - "Backend-NS/**"
      - "Backend-UM/**"
      - "Frontend/**"
    branches:
      - master

  workflow_dispatch: # ðŸ”¹ Added manual trigger support

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # ðŸ”¹ Change this if needed

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine Changed Services
        id: changed-files
        uses: dorny/paths-filter@v2
        with:
          filters: |
            Backend-AS:
              - "Backend-AS/**"
            Backend-ED:
              - "Backend-ED/**"
            Backend-NS:
              - "Backend-NS/**"
            Backend-UM:
              - "Backend-UM/**"
            Frontend:
              - "Frontend/**"

      - name: Build & Push Docker Images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          for SERVICE in Backend-AS Backend-ED Backend-NS Backend-UM Frontend; do
            SERVICE_VAR=$(echo $SERVICE | tr '-' '_')
            CHANGED_VAR="steps.changed-files.outputs.$SERVICE_VAR"
            if [[ "${{ fromJSON(env.CHANGED_VAR) }}" == 'true' ]]; then
              echo "Building and pushing image for $SERVICE..."
              docker build -t $ECR_REGISTRY/$(echo $SERVICE | tr '[:upper:]' '[:lower:]'):$IMAGE_TAG -f $SERVICE/Dockerfile $SERVICE
              docker push $ECR_REGISTRY/$(echo $SERVICE | tr '[:upper:]' '[:lower:]'):$IMAGE_TAG
            fi
          done
